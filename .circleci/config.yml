version: 2

jobs:
  build:
    #...
    docker:
      - image: circleci/python3.8.2
    steps:
      - run:
          name: Build
          command: |
            echo "You know you should write tests, right?"

            # install pytest
            pip install -U pytest

            # run pytest
            pytest

  deploy:
    machine:
      enabled: true
    steps:
      - run:
          name: Deploy Over SSH
          command: |

            # ssh into server
            ssh $SSH_USER@$SSH_HOST bash -c '\

            # cd to project folder
            cd /app/

            # clone the repo if it doesn't exist'
            [ ! -d 'flask-factory' ] && \
            git clone https://github.com/rednafi/flask-factory.git

            cd flask-factory

            # pull in the master repo without raising merge conflict
            git fetch --all
            git reset --hard origin/master

            # setting up docker
            # bring down the containers
            docker-compose down

            # remove the containers and orphan volumes
            docker-compose rm -f -v

            # remove all dangling volumes
            docker volume rm $(docker volume ls -qf dangling=true)

            # remove the image of the base app
            # this app will be rebuild
            # ignore the containers that do not need to be rebuilt
            docker rmi $(docker images flaskfactory_app)

            # bring up the containers again
            docker-compose up -d'

workflows:
  version: 2
  build-and-deploy:
    jobs:
      - build
      - deploy:
          requires:
            - build # only deploy once build job has completed
          filters:
            branches:
              only: master # only deploy on the master branch
